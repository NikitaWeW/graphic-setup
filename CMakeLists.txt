include(CMakePrintHelpers)
cmake_minimum_required(VERSION 3.5)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")

project(learning-opengl C CXX)
set(IMGUI_DIR ${CMAKE_SOURCE_DIR}/imgui)
set(IMGUI_BACKEND_SOURCES ${IMGUI_DIR}/backends/imgui_impl_opengl3.cpp ${IMGUI_DIR}/backends/imgui_impl_glfw.cpp)

if(NOT DEFINED DEPS)
    set(DEPS OpenGL GLFW Logger GLM imgui)
endif()
include(gvo/gvo.cmake)
gvo_find_dependencies(DEPENDENCIES ${DEPS} SCRIPT_DIRS ${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/gvo/scripts)

file(GLOB_RECURSE SOURCES "src/*.cpp")
add_executable(main ${SOURCES})
target_link_libraries(main PRIVATE gvo)

message(STATUS "Sources: ")
foreach(SOURCE ${SOURCES})
    message(STATUS "\t${SOURCE}")
endforeach()
message(STATUS "Dependencies:")
foreach(GVO_DEP_NAME ${DEPS})
    string(TOUPPER ${GVO_DEP_NAME} GVO_DEP_NAME_CAP)
    message(STATUS "\t${GVO_DEP_NAME}:")
    message(STATUS "\t\tlib:     \"${${GVO_DEP_NAME_CAP}_LIBRARIES}\"")
    message(STATUS "\t\tinclude: \"${${GVO_DEP_NAME_CAP}_INCLUDE_DIRS}\"")
endforeach()
message("C++ Debug Flags: ${CMAKE_CXX_FLAGS_DEBUG}")
message("C Debug Flags: ${CMAKE_C_FLAGS_DEBUG}")